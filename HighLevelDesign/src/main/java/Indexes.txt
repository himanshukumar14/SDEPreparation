The goal of creating an index on a particular table in a database is to make it faster to search through the table
and find the row or rows that we want. Indexes can be created using one or more columns of a database table,
providing the basis for both rapid random lookups and efficient access of ordered records.

Clustered index
Composite index

Data stored in disk and it's memory location is stored in the B+ tree with the indexed column stored in sorted manner

B+ Tree
logn querying and insertions

Impact of indexes
---------------------
An index can dramatically speed up data retrieval but may itself be large due to the additional keys, which slow down data insertion & update.
When adding rows or making updates to existing rows for a table with an active index, we not only have to write the data but also have to update the index.
This will decrease the write performance. This performance degradation applies to all insert, update, and delete operations for the table.
For this reason, adding unnecessary indexes on tables should be avoided and indexes that are no longer used should be removed.

To reiterate, adding indexes is about improving the performance of search queries. If the goal of the database is to provide
a data store that is often written to and rarely read from, in that case, decreasing the performance of the more common operation,
which is writing, is probably not worth the increase in performance we get from reading.